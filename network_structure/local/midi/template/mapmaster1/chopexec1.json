{
	"name": "chopexec1",
	"OPType": "chopexecuteDAT",
	"comment": "",
	"nodeX": 420,
	"nodeY": -100,
	"nodeWidth": 130,
	"nodeHeight": 90,
	"storage": {},
	"tags": [],
	"replicator": null,
	"activeViewer": false,
	"allowCooking": true,
	"bypass": false,
	"cloneImmune": false,
	"render": false,
	"viewer": true,
	"inputConnectors": [
		{}
	],
	"outputConnectors": [
		{}
	],
	"par": [
		{
			"name": "fromop",
			"val": "",
			"expr": "me.parent()",
			"enableExpr": null,
			"exportOP": null,
			"exportSource": null,
			"bindExpr": null,
			"bindReferences": [],
			"mode": "EXPRESSION"
		},
		{
			"name": "chop",
			"val": "sliders buttons",
			"expr": null,
			"enableExpr": null,
			"exportOP": null,
			"exportSource": null,
			"bindExpr": null,
			"bindReferences": [],
			"mode": "CONSTANT"
		},
		{
			"name": "defaultreadencoding",
			"val": "cp1252",
			"expr": null,
			"enableExpr": null,
			"exportOP": null,
			"exportSource": null,
			"bindExpr": null,
			"bindReferences": [],
			"mode": "CONSTANT"
		}
	],
	"text": [
		"# me - this DAT",
		"# ",
		"# channel - the Channel object which has changed",
		"# sampleIndex - the index of the changed sample",
		"# val - the numeric value of the changed sample",
		"# prev - the previous sample value",
		"# ",
		"# Make sure the corresponding toggle is enabled in the CHOP Execute DAT.",
		"",
		"# use the methods of midiout, see midioutCHOP Class help",
		"# For example;",
		"# maptable = op('/local/midi/device')",
		"# ch = maptable[parent().digits, 'channel']",
		"# op('midiout').sendNoteOn(ch, index, val)",
		"# op('midiout').sendNoteOff(ch, index, val)",
		"# op('midiout').sendControl(ch, index, val)",
		"",
		"",
		"def offToOn(channel, sampleIndex, val, prev):",
		"\treturn",
		"",
		"def whileOn(channel, sampleIndex, val, prev):",
		"\treturn",
		"",
		"def onToOff(channel, sampleIndex, val, prev):",
		"\treturn",
		"",
		"def whileOff(channel, sampleIndex, val, prev):",
		"\treturn",
		"",
		"def valueChange(channel, sampleIndex, val, prev):",
		"\treturn",
		"\t"
	]
}